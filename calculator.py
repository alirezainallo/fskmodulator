import math

def print_fixed2signed(num, franctions):
    toPrint = num * pow(2,abs(franctions))
    retVal = round(toPrint)
    # print(retVal)
    print(str(num)+"=>" ,retVal)
    if abs(num) < 1:
        print("bitNum:", abs(franctions))
        pass
    else:
        print("bitNum:", math.ceil(math.log2(abs(retVal))))
        pass
    return retVal
def print_signed2fixed(num, francNum):
    fixed = num / pow(2, int(francNum))
    print(str(num)+"/pow(2, "+str(francNum)+"):", fixed)
    return fixed
def print_exactOfFranction(exact):
    print("log2("+str(exact)+"):", math.log2(exact))
    rounded = math.floor(math.log2(exact))
    print("round(log2("+str(exact)+")):", -rounded)
    # for exp in range(-1, rounded-1, -1):
    #     print("2^"+str(exp), pow(2, exp))
    #     pass
    return abs(rounded)

print("-------------------------------")
exact = 0.0001
frantionalNum = print_exactOfFranction(exact)
print("-------------------------------")
num = 3.1415
print_fixed2signed(num, frantionalNum)
print("-------------------------------")
print_fixed2signed(16384, 14)
print("-------------------------------")
# res = int(input("enter your unsigend number: "))
# francNum = int(input("enter your franctional num: "))
res = 16384
francNum = 14
print_signed2fixed(res, francNum)
print("-------------------------------")


# fixed_point_numbers = [
#     0,
#     0.0174,
#     0.0348,
#     0.0523,
#     0.0697,
#     0.0871,
#     0.1045,
#     0.1218,
#     0.1391,
#     0.1564,
#     0.1736,
#     0.1908,
#     0.2079,
#     0.2249,
#     0.2419,
#     0.2588,
#     0.2756,
#     0.2923,
#     0.3090,
#     0.3255,
#     0.3420,
#     0.3583,
#     0.3746,
#     0.3907,
#     0.4067,
#     0.4226,
#     0.4383,
#     0.4539,
#     0.4694,
#     0.4848,
#     0.5000,
#     0.5150,
#     0.5299,
#     0.5446,
#     0.5591,
#     0.5735,
#     0.5877,
#     0.6018,
#     0.6156,
#     0.6293,
#     0.6427,
#     0.6560,
#     0.6691,
#     0.6819,
#     0.6946,
#     0.7071,
#     0.7193,
#     0.7313,
#     0.7431,
#     0.7547,
#     0.7660,
#     0.7771,
#     0.7880,
#     0.7986,
#     0.8090,
#     0.8191,
#     0.8290,
#     0.8386,
#     0.8480,
#     0.8571,
#     0.8660,
#     0.8746,
#     0.8829,
#     0.8910,
#     0.8987,
#     0.9063,
#     0.9135,
#     0.9205,
#     0.9271,
#     0.9335,
#     0.9396,
#     0.9455,
#     0.9510,
#     0.9563,
#     0.9612,
#     0.9659,
#     0.9702,
#     0.9743,
#     0.9781,
#     0.9816,
#     0.9848,
#     0.9876,
#     0.9902,
#     0.9925,
#     0.9945,
#     0.9961,
#     0.9975,
#     0.9986,
#     0.9993,
#     0.9998,
#     1,
#     0.9998,
#     0.9993,
#     0.9986,
#     0.9975,
#     0.9961,
#     0.9945,
#     0.9925,
#     0.9902,
#     0.9876,
#     0.9848,
#     0.9816,
#     0.9781,
#     0.9743,
#     0.9702,
#     0.9659,
#     0.9612,
#     0.9563,
#     0.9510,
#     0.9455,
#     0.9396,
#     0.9335,
#     0.9271,
#     0.9205,
#     0.9135,
#     0.9063,
#     0.8987,
#     0.8910,
#     0.8829,
#     0.8746,
#     0.8660,
#     0.8571,
#     0.8480,
#     0.8386,
#     0.8290,
#     0.8191,
#     0.8090,
#     0.7986,
#     0.7880,
#     0.7771,
#     0.7660,
#     0.7547,
#     0.7431,
#     0.7313,
#     0.7193,
#     0.7071,
#     0.6946,
#     0.6819,
#     0.6691,
#     0.6560,
#     0.6427,
#     0.6293,
#     0.6156,
#     0.6018,
#     0.5877,
#     0.5735,
#     0.5591,
#     0.5446,
#     0.5299,
#     0.5150,
#     0.5000,
#     0.4848,
#     0.4694,
#     0.4539,
#     0.4383,
#     0.4226,
#     0.4067,
#     0.3907,
#     0.3746,
#     0.3583,
#     0.3420,
#     0.3255,
#     0.3090,
#     0.2923,
#     0.2756,
#     0.2588,
#     0.2419,
#     0.2249,
#     0.2079,
#     0.1908,
#     0.1736,
#     0.1564,
#     0.1391,
#     0.1218,
#     0.1045,
#     0.0871,
#     0.0697,
#     0.0523,
#     0.0348,
#     0.0174,
#     1.2246,
#     -0.0174,
#     -0.0348,
#     -0.0523,
#     -0.0697,
#     -0.0871,
#     -0.1045,
#     -0.1218,
#     -0.1391,
#     -0.1564,
#     -0.1736,
#     -0.1908,
#     -0.2079,
#     -0.2249,
#     -0.2419,
#     -0.2588,
#     -0.2756,
#     -0.2923,
#     -0.3090,
#     -0.3255,
#     -0.3420,
#     -0.3583,
#     -0.3746,
#     -0.3907,
#     -0.4067,
#     -0.4226,
#     -0.4383,
#     -0.4539,
#     -0.4694,
#     -0.4848,
#     -0.5000,
#     -0.5150,
#     -0.5299,
#     -0.5446,
#     -0.5591,
#     -0.5735,
#     -0.5877,
#     -0.6018,
#     -0.6156,
#     -0.6293,
#     -0.6427,
#     -0.6560,
#     -0.6691,
#     -0.6819,
#     -0.6946,
#     -0.7071,
#     -0.7193,
#     -0.7313,
#     -0.7431,
#     -0.7547,
#     -0.7660,
#     -0.7771,
#     -0.7880,
#     -0.7986,
#     -0.8090,
#     -0.8191,
#     -0.8290,
#     -0.8386,
#     -0.8480,
#     -0.8571,
#     -0.8660,
#     -0.8746,
#     -0.8829,
#     -0.8910,
#     -0.8987,
#     -0.9063,
#     -0.9135,
#     -0.9205,
#     -0.9271,
#     -0.9335,
#     -0.9396,
#     -0.9455,
#     -0.9510,
#     -0.9563,
#     -0.9612,
#     -0.9659,
#     -0.9702,
#     -0.9743,
#     -0.9781,
#     -0.9816,
#     -0.9848,
#     -0.9876,
#     -0.9902,
#     -0.9925,
#     -0.9945,
#     -0.9961,
#     -0.9975,
#     -0.9986,
#     -0.9993,
#     -0.9998,
#     -1,
#     -0.9998,
#     -0.9993,
#     -0.9986,
#     -0.9975,
#     -0.9961,
#     -0.9945,
#     -0.9925,
#     -0.9902,
#     -0.9876,
#     -0.9848,
#     -0.9816,
#     -0.9781,
#     -0.9743,
#     -0.9702,
#     -0.9659,
#     -0.9612,
#     -0.9563,
#     -0.9510,
#     -0.9455,
#     -0.9396,
#     -0.9335,
#     -0.9271,
#     -0.9205,
#     -0.9135,
#     -0.9063,
#     -0.8987,
#     -0.8910,
#     -0.8829,
#     -0.8746,
#     -0.8660,
#     -0.8571,
#     -0.8480,
#     -0.8386,
#     -0.8290,
#     -0.8191,
#     -0.8090,
#     -0.7986,
#     -0.7880,
#     -0.7771,
#     -0.7660,
#     -0.7547,
#     -0.7431,
#     -0.7313,
#     -0.7193,
#     -0.7071,
#     -0.6946,
#     -0.6819,
#     -0.6691,
#     -0.6560,
#     -0.6427,
#     -0.6293,
#     -0.6156,
#     -0.6018,
#     -0.5877,
#     -0.5735,
#     -0.5591,
#     -0.5446,
#     -0.5299,
#     -0.5150,
#     -0.5000,
#     -0.4848,
#     -0.4694,
#     -0.4539,
#     -0.4383,
#     -0.4226,
#     -0.4067,
#     -0.3907,
#     -0.3746,
#     -0.3583,
#     -0.3420,
#     -0.3255,
#     -0.3090,
#     -0.2923,
#     -0.2756,
#     -0.2588,
#     -0.2419,
#     -0.2249,
#     -0.2079,
#     -0.1908,
#     -0.1736,
#     -0.1564,
#     -0.1391,
#     -0.1218,
#     -0.1045,
#     -0.0871,
#     -0.0697,
#     -0.0523,
#     -0.0348,
#     -0.0174
# ]

# # Iterate through the array and print the results
# fractions = 14
# for num in fixed_point_numbers:
#     print_fixed2signed(num, fractions)